@model IEnumerable<news.Models.infoNews>
@{
    ViewData["Title"] = "Home Page";
}

<style>
    .news-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px; 
        padding: 20px;
        border: 2px solid orange; 
        border-radius: 5px;
    }

    .news-card {
        border: 2px solid blue; 
        border-radius: 8px;
        overflow: hidden; 
        text-decoration: none; 
        color: inherit; 
        display: flex;
        flex-direction: column;
        transition: transform 0.2s; 
    }

        .news-card:hover {
            transform: scale(1.03); 
        }

        .news-card img {
            width: 100%;
            height: 150px; 
            object-fit: cover; 
            border-bottom: 2px solid orange;
        }

    .news-card-content {
        padding: 10px;
        flex-grow: 1; 
        display: flex;
        flex-direction: column;
    }

    .news-card-title {
        font-weight: bold;
    }

    
    .news-card-snippet {
        font-size: 0.9em;
        color: #495057;
        margin-top: 8px;
        flex-grow: 1; 
    }

    .news-card-date {
        font-size: 0.8em;
        color: #6c757d;
        margin-top: 10px;
    }

</style>

<div class="text-start">
    <h1 class="display-4">News</h1>
    <hr />
</div>

<!-- This is the container for all your news cards -->
<div class="news-grid">
    @foreach (var item in Model)
    {
        <!-- Each card is a link to the detail page -->
        <a asp-action="detailNews" asp-route-id="@item.Id" class="news-card">

            <!-- The image for the news title -->
            <img src="@item.ImgTitle" alt="Image for @item.Title" />

            <!-- A container for text content -->
            <div class="news-card-content">
                <!-- The title of the news -->
                <h5 class="news-card-title">@item.Title</h5>

                <!-- This is the new part for the content snippet -->
                @{
                    // Set the maximum length for the snippet
                    var maxLength = 100;
                    // Truncate the content if it's longer than maxLength
                    var snippet = item.Content.Length > maxLength ? item.Content.Substring(0, maxLength) + "..." : item.Content;
                }
                <p class="news-card-snippet">@snippet</p>

                <!-- The published date -->
                <p class="news-card-date">@item.PublishedDate.ToString("MMMM dd, yyyy")</p>
            </div>
        </a>
    }
</div>